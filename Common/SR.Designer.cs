//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:2.0.50727.5485
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.Common {
    using System;
    
    
    /// <summary>
    ///   Yerelleştirilmiş dizeleri aramak gibi işlemler için, türü kesin olarak belirtilmiş kaynak sınıfı.
    /// </summary>
    // Bu sınıf ResGen veya Visual Studio gibi bir araç kullanılarak StronglyTypedResourceBuilder
    // sınıfı tarafından otomatik olarak oluşturuldu.
    // Üye eklemek veya kaldırmak için .ResX dosyanızı düzenleyin ve sonra da ResGen
    // komutunu /str seçeneğiyle yeniden çalıştırın veya VS projenizi yeniden oluşturun.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Bu sınıf tarafından kullanılan, önbelleğe alınmış ResourceManager örneğini döndürür.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClearCanvas.Common.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Bu türü kesin olarak belirtilmiş kaynak sınıfını kullanarak geçerli iş parçacığının
        ///   CurrentUICulture özelliğini tüm kaynak aramaları için geçersiz kılar.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Unable to resolve application root class {0} - multiple matches. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionApplicationRootMultipleMatches {
            get {
                return ResourceManager.GetString("ExceptionApplicationRootMultipleMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unable to resolve application root class {0} - no matches. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionApplicationRootNoMatches {
            get {
                return ResourceManager.GetString("ExceptionApplicationRootNoMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Value must be non-negative. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionArgumentNegative {
            get {
                return ResourceManager.GetString("ExceptionArgumentNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Value must be greater than zero. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionArgumentNotPositive {
            get {
                return ResourceManager.GetString("ExceptionArgumentNotPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {3} = {0} is invalid. {3} must be &gt;= {1} and &lt;= {2}. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionArgumentOutOfRange {
            get {
                return ResourceManager.GetString("ExceptionArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The background task is already running benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionBackgroundTaskAlreadyRunning {
            get {
                return ResourceManager.GetString("ExceptionBackgroundTaskAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expression must evaluate to Array, ICollection, or IEnumerable type. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionCastExpressionArrayCollectionEnumerable {
            get {
                return ResourceManager.GetString("ExceptionCastExpressionArrayCollectionEnumerable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expression must evaluate to Boolean type. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionCastExpressionBoolean {
            get {
                return ResourceManager.GetString("ExceptionCastExpressionBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expression must evaluate to IEnumerable type. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionCastExpressionEnumerable {
            get {
                return ResourceManager.GetString("ExceptionCastExpressionEnumerable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expression must evaluate to String type. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionCastExpressionString {
            get {
                return ResourceManager.GetString("ExceptionCastExpressionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Condition is not met :{0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionConditionIsNotMet {
            get {
                return ResourceManager.GetString("ExceptionConditionIsNotMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Duplicate plugin {0} found. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDuplicatePluginFound {
            get {
                return ResourceManager.GetString("ExceptionDuplicatePluginFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} cannot be empty. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionEmptyString {
            get {
                return ResourceManager.GetString("ExceptionEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expected type {0}. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionExpectedType {
            get {
                return ResourceManager.GetString("ExceptionExpectedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extension class {0} does not extend a valid extension point class. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionExtensionDoesNotExtendValidExtensionPointClass {
            get {
                return ResourceManager.GetString("ExceptionExtensionDoesNotExtendValidExtensionPointClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extension class {0} does not implement required interface {1}. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionExtensionDoesNotImplementRequiredInterface {
            get {
                return ResourceManager.GetString("ExceptionExtensionDoesNotImplementRequiredInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Extension class {0} must be a concrete class. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionExtensionMustBeConcreteClass {
            get {
                return ResourceManager.GetString("ExceptionExtensionMustBeConcreteClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The extension point {0} is invalid because it is not a direct subclass of ExtensionPoint&lt;&gt; benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionExtensionPointMustSubclassExtensionPoint {
            get {
                return ResourceManager.GetString("ExceptionExtensionPointMustSubclassExtensionPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to transfer file from {0} to {1}. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFailedToTransferFile {
            get {
                return ResourceManager.GetString("ExceptionFailedToTransferFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   We&apos;re sorry, but an error has occurred that ClearCanvas Workstation cannot recover from.  Please check the log and restart. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFatalApplicationError {
            get {
                return ResourceManager.GetString("ExceptionFatalApplicationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unable to convert from String to {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFormatCannotConvertFromStringToType {
            get {
                return ResourceManager.GetString("ExceptionFormatCannotConvertFromStringToType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unable to convert from {0} to String benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFormatCannotConvertFromTypeToString {
            get {
                return ResourceManager.GetString("ExceptionFormatCannotConvertFromTypeToString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Deserialization failed for object type &apos;{0}&apos; benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFormatDeserializationFailedForType {
            get {
                return ResourceManager.GetString("ExceptionFormatDeserializationFailedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Serialization failed for object type &apos;{0}&apos; benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFormatSerializationFailedForType {
            get {
                return ResourceManager.GetString("ExceptionFormatSerializationFailedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {3}[{0}] is invalid.  Index must be &gt;= {1} and &lt;= {2}. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionIndexOutOfRange {
            get {
                return ResourceManager.GetString("ExceptionIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} must be of type {1}. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidCast {
            get {
                return ResourceManager.GetString("ExceptionInvalidCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is not a valid specification id. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidSpecificationId {
            get {
                return ResourceManager.GetString("ExceptionInvalidSpecificationId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JScript evaluation error on {0}: {1} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionJScriptEvaluation {
            get {
                return ResourceManager.GetString("ExceptionJScriptEvaluation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} has not been set.  Object state is invalid. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMemberNotSet {
            get {
                return ResourceManager.GetString("ExceptionMemberNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} has not been set.  {1} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMemberNotSetVerbose {
            get {
                return ResourceManager.GetString("ExceptionMemberNotSetVerbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   More than one model plugin found. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoreThanOneModelPluginFound {
            get {
                return ResourceManager.GetString("ExceptionMoreThanOneModelPluginFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No extensions found for extension point {0}, or the extensions could not be instantiated.  Please see the log for more information. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionNoExtensionsCreated {
            get {
                return ResourceManager.GetString("ExceptionNoExtensionsCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No plugins could be found. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionNoPluginsFound {
            get {
                return ResourceManager.GetString("ExceptionNoPluginsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No plugins have been loaded. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionNoPluginsLoaded {
            get {
                return ResourceManager.GetString("ExceptionNoPluginsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Assembly {0} is not a plugin. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionNotAPlugin {
            get {
                return ResourceManager.GetString("ExceptionNotAPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} does not exist. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionPathDoesNotExist {
            get {
                return ResourceManager.GetString("ExceptionPathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Plugin {0} could not be found.  Unable to start plugin. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionPluginCouldNotBeFound {
            get {
                return ResourceManager.GetString("ExceptionPluginCouldNotBeFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Plugin directory could not be found. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionPluginDirectoryNotFound {
            get {
                return ResourceManager.GetString("ExceptionPluginDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There was a problem loading one or more plugins. Please see the log for more information. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionPluginWarning {
            get {
                return ResourceManager.GetString("ExceptionPluginWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resource {0}  not found. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionResourceNotFound {
            get {
                return ResourceManager.GetString("ExceptionResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No script engine available for language {0}. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionScriptEngineLanguage {
            get {
                return ResourceManager.GetString("ExceptionScriptEngineLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Template evaluation generated an exception. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionTemplateEvaluation {
            get {
                return ResourceManager.GetString("ExceptionTemplateEvaluation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The thread pool has already been started. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionThreadPoolAlreadyStarted {
            get {
                return ResourceManager.GetString("ExceptionThreadPoolAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The thread pool must be stopped before setting the {0} parameter. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionThreadPoolMustBeStopped {
            get {
                return ResourceManager.GetString("ExceptionThreadPoolMustBeStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The thread pool has not been started.  Unable to enqueue the specified item. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionThreadPoolNotStarted {
            get {
                return ResourceManager.GetString("ExceptionThreadPoolNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Exception thrown benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionThrown {
            get {
                return ResourceManager.GetString("ExceptionThrown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unable to load any plugins.  Please see the log for more information. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionUnableToLoadPlugins {
            get {
                return ResourceManager.GetString("ExceptionUnableToLoadPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} Bytes benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatFileSizeBytes {
            get {
                return ResourceManager.GetString("FormatFileSizeBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0:f2} GB benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatFileSizeGB {
            get {
                return ResourceManager.GetString("FormatFileSizeGB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0:f2} KB benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatFileSizeKB {
            get {
                return ResourceManager.GetString("FormatFileSizeKB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0:f2} MB benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatFileSizeMB {
            get {
                return ResourceManager.GetString("FormatFileSizeMB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0:f2} TB benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatFileSizeTB {
            get {
                return ResourceManager.GetString("FormatFileSizeTB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loaded plugin: {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatLoadedPlugin {
            get {
                return ResourceManager.GetString("FormatLoadedPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Processing plugin: {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatProcessingPlugin {
            get {
                return ResourceManager.GetString("FormatProcessingPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ({0}) benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatReleaseType {
            get {
                return ResourceManager.GetString("FormatReleaseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} seconds benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatSeconds {
            get {
                return ResourceManager.GetString("FormatSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &apos;{0}&apos; must be an interface. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatTypeMustBeInterface {
            get {
                return ResourceManager.GetString("FormatTypeMustBeInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type &apos;{0}&apos; must implement interface &apos;{1}&apos;. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatTypeMustImplementInterface {
            get {
                return ResourceManager.GetString("FormatTypeMustImplementInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unable to find matching action for &apos;{0}&apos; node in script.  Unable to perform action. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatUnableToFindMatchingAction {
            get {
                return ResourceManager.GetString("FormatUnableToFindMatchingAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configuration store not found - defaulting to LocalFileSettingsProvider benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LogConfigurationStoreNotFound {
            get {
                return ResourceManager.GetString("LogConfigurationStoreNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to process plugin assembly {0} with the following exception(s): benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LogFailedToProcessPluginAssembly {
            get {
                return ResourceManager.GetString("LogFailedToProcessPluginAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found unmanaged DLL: {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LogFoundUnmanagedDLL {
            get {
                return ResourceManager.GetString("LogFoundUnmanagedDLL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   License provider not found - defaulting to local license provider. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LogLicenseProviderNotFound {
            get {
                return ResourceManager.GetString("LogLicenseProviderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Local configuration store not found - defaulting to LocalFileSettingsProvider benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LogLocalConfigurationStoreNotFound {
            get {
                return ResourceManager.GetString("LogLocalConfigurationStoreNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loaded plugin: {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LogPluginLoaded {
            get {
                return ResourceManager.GetString("LogPluginLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Time provider not found - defaulting to local machine time. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LogTimeProviderNotFound {
            get {
                return ResourceManager.GetString("LogTimeProviderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An extension point cannot extend IExtensionPoint. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageCannotExtendIExtensionPoint {
            get {
                return ResourceManager.GetString("MessageCannotExtendIExtensionPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Finding plugins... benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageFindingPlugins {
            get {
                return ResourceManager.GetString("MessageFindingPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Settings scope not defined. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageSettingsScopeNotDefined {
            get {
                return ResourceManager.GetString("MessageSettingsScopeNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The {0} shred has failed to start.  Please check the log for more details. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ShredFailedToStart {
            get {
                return ResourceManager.GetString("ShredFailedToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The {0} shred has failed to stop.  Please check the log for more details. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ShredFailedToStop {
            get {
                return ResourceManager.GetString("ShredFailedToStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The {0} shred has started successfully. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ShredStartedSuccessfully {
            get {
                return ResourceManager.GetString("ShredStartedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Starting {0} Shred benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ShredStarting {
            get {
                return ResourceManager.GetString("ShredStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The {0} shred has stopped successfully. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ShredStoppedSuccessfully {
            get {
                return ResourceManager.GetString("ShredStoppedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stopping {0} Shred benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ShredStopping {
            get {
                return ResourceManager.GetString("ShredStopping", resourceCulture);
            }
        }
    }
}
