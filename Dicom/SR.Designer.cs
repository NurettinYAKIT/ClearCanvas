//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:2.0.50727.5485
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.Dicom {
    using System;
    
    
    /// <summary>
    ///   Yerelleştirilmiş dizeleri aramak gibi işlemler için, türü kesin olarak belirtilmiş kaynak sınıfı.
    /// </summary>
    // Bu sınıf ResGen veya Visual Studio gibi bir araç kullanılarak StronglyTypedResourceBuilder
    // sınıfı tarafından otomatik olarak oluşturuldu.
    // Üye eklemek veya kaldırmak için .ResX dosyanızı düzenleyin ve sonra da ResGen
    // komutunu /str seçeneğiyle yeniden çalıştırın veya VS projenizi yeniden oluşturun.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Bu sınıf tarafından kullanılan, önbelleğe alınmış ResourceManager örneğini döndürür.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClearCanvas.Dicom.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Bu türü kesin olarak belirtilmiş kaynak sınıfını kullanarak geçerli iş parçacığının
        ///   CurrentUICulture özelliğini tüm kaynak aramaları için geçersiz kılar.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Non-DICOM, application-level logic exception or execution failure benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionApplicationLevelLogic {
            get {
                return ResourceManager.GetString("ExceptionApplicationLevelLogic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The AE Title cannot be null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomAETitleNull {
            get {
                return ResourceManager.GetString("ExceptionDicomAETitleNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The AE Title cannot be zero-length benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomAETitleZeroLength {
            get {
                return ResourceManager.GetString("ExceptionDicomAETitleZeroLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The connection timeout value must be between 1 and 32767 benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomConnectionTimeoutOutOfRange {
            get {
                return ResourceManager.GetString("ExceptionDicomConnectionTimeoutOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File: {0} - {1} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDICOMFile {
            get {
                return ResourceManager.GetString("ExceptionDICOMFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The find dataset cannot be null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomFindDatasetNull {
            get {
                return ResourceManager.GetString("ExceptionDicomFindDatasetNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The hostname cannot be null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomHostnameNull {
            get {
                return ResourceManager.GetString("ExceptionDicomHostnameNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The hostname cannot be zero-length benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomHostnameZeroLength {
            get {
                return ResourceManager.GetString("ExceptionDicomHostnameZeroLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The listeningPort must be greater than zero and less than System.Int32.MaxValue benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomListeningPortOutOfRange {
            get {
                return ResourceManager.GetString("ExceptionDicomListeningPortOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The move dataset cannot be null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomMoveDatasetNull {
            get {
                return ResourceManager.GetString("ExceptionDicomMoveDatasetNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The passed in dataset is null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomNullDataset {
            get {
                return ResourceManager.GetString("ExceptionDicomNullDataset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PATIENT level query using the Study Root Query/Retrieve Information model is invalid benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomPatientLevelQueryInvalid {
            get {
                return ResourceManager.GetString("ExceptionDicomPatientLevelQueryInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified directory where incoming DICOM objects should be saved does not exist - {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomSaveDirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("ExceptionDicomSaveDirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The directory where inbound DICOM objects are stored cannot be null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomSaveDirectoryNull {
            get {
                return ResourceManager.GetString("ExceptionDicomSaveDirectoryNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tag: {0} - {1} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDICOMTag {
            get {
                return ResourceManager.GetString("ExceptionDICOMTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transfer syntax {0} for SOP UID = {1} not supported.  Compressed pixel data cannot be loaded at this time. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionDicomTransferSyntaxNotSupported {
            get {
                return ResourceManager.GetString("ExceptionDicomTransferSyntaxNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Find failed: operation was cancelled. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFindCancelled {
            get {
                return ResourceManager.GetString("ExceptionFindCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Find failed: identifier does not match SOP Class. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFindFailedIdentifierDoesNotMatchSOPClass {
            get {
                return ResourceManager.GetString("ExceptionFindFailedIdentifierDoesNotMatchSOPClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Find failed: unable to process. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFindFailedUnableToProcess {
            get {
                return ResourceManager.GetString("ExceptionFindFailedUnableToProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Find warning: unsupported optional keys. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFindPendingWarningUnsupportedOptionalKeys {
            get {
                return ResourceManager.GetString("ExceptionFindPendingWarningUnsupportedOptionalKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Find refused: out of resources. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFindRefusedOutOfResources {
            get {
                return ResourceManager.GetString("ExceptionFindRefusedOutOfResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Find refused: SOP Class not supported. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionFindRefusedSOPClassNotSupported {
            get {
                return ResourceManager.GetString("ExceptionFindRefusedSOPClassNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The Accession Number cannot be null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionGeneralAccessionNull {
            get {
                return ResourceManager.GetString("ExceptionGeneralAccessionNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The Accession Number cannot be zero-length benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionGeneralAccessionZeroLength {
            get {
                return ResourceManager.GetString("ExceptionGeneralAccessionZeroLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The object passed is not of the right type for Equals comparison. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionGeneralEqualsWrongType {
            get {
                return ResourceManager.GetString("ExceptionGeneralEqualsWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The argument to CompareTo for the type Uid is not itself of type Uid benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionGeneralUidCompareToTypeIncorrect {
            get {
                return ResourceManager.GetString("ExceptionGeneralUidCompareToTypeIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Invalid DICOM UID format: {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionGeneralUIDFormat {
            get {
                return ResourceManager.GetString("ExceptionGeneralUIDFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   UID cannot exceeed 64 characters: {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionGeneralUIDLength {
            get {
                return ResourceManager.GetString("ExceptionGeneralUIDLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The UID cannot be null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionGeneralUidNull {
            get {
                return ResourceManager.GetString("ExceptionGeneralUidNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The UID cannot be zero-length benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionGeneralUidZeroLength {
            get {
                return ResourceManager.GetString("ExceptionGeneralUidZeroLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BitsAllocated must be either 8 or 16 (bitsAllocated = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidBitsAllocated {
            get {
                return ResourceManager.GetString("ExceptionInvalidBitsAllocated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BitsStored must be greater than zero (bitsStored = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidBitsStored {
            get {
                return ResourceManager.GetString("ExceptionInvalidBitsStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BitsStored must be &lt;= BitsAllocated (bitsStored = {0}, bitsAllocated = {1}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidBitsStoredBitsAllocated {
            get {
                return ResourceManager.GetString("ExceptionInvalidBitsStoredBitsAllocated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Columns must be greater than zero (columns = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidColumns {
            get {
                return ResourceManager.GetString("ExceptionInvalidColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Invalid film size: {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidFilmSize {
            get {
                return ResourceManager.GetString("ExceptionInvalidFilmSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HighBit must be greater than zero (highBit = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidHighBit {
            get {
                return ResourceManager.GetString("ExceptionInvalidHighBit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HighBit must be &lt;= BitsAllocated - 1 (highBit = {0}, bitsAllocated = {1}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidHighBitBitsAllocated {
            get {
                return ResourceManager.GetString("ExceptionInvalidHighBitBitsAllocated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Invalid image display format: {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidImageDisplayFormat {
            get {
                return ResourceManager.GetString("ExceptionInvalidImageDisplayFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PhotometricInterpretation must be one of the enumerated values specified in DICOM PS 3.3 (photometricInterpretation = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidPhotometricInterpretation {
            get {
                return ResourceManager.GetString("ExceptionInvalidPhotometricInterpretation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PhotometricInterpretation must be consistent with the the number of SamplesPerPixel (photometricInterpretation = {0}, samplesPerPixel = {1}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidPhotometricInterpretationSamplesPerPixel {
            get {
                return ResourceManager.GetString("ExceptionInvalidPhotometricInterpretationSamplesPerPixel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PixelData length must be equal to SizeInBytes (pixelDataLength = {0}, sizeInBytes = {1}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidPixelData {
            get {
                return ResourceManager.GetString("ExceptionInvalidPixelData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PixelRepresentation must be 0 or 1 (pixelRepresentation = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidPixelRepresentation {
            get {
                return ResourceManager.GetString("ExceptionInvalidPixelRepresentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PlanarConfiguration must be 0 or 1 (planarConfiguration = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidPlanarConfiguration {
            get {
                return ResourceManager.GetString("ExceptionInvalidPlanarConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rows must be greater than zero (rows = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidRows {
            get {
                return ResourceManager.GetString("ExceptionInvalidRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SamplesPerPixel must be 1, 3 or 4 (samplesPerPixel = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidSamplesPerPixel {
            get {
                return ResourceManager.GetString("ExceptionInvalidSamplesPerPixel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SeriesInstanceUID must not be empty. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidSeriesInstanceUID {
            get {
                return ResourceManager.GetString("ExceptionInvalidSeriesInstanceUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SizeInBytes improperly calculated (correct size = {0}, calculated size {1}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidSizeInBytes {
            get {
                return ResourceManager.GetString("ExceptionInvalidSizeInBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SOPInstanceUID must not be empty. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidSOPInstanceUID {
            get {
                return ResourceManager.GetString("ExceptionInvalidSOPInstanceUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   StudyInstanceUID must not be empty. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidStudyInstanceUID {
            get {
                return ResourceManager.GetString("ExceptionInvalidStudyInstanceUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The TransferSyntaxUID cannot be empty. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionInvalidTransferUID {
            get {
                return ResourceManager.GetString("ExceptionInvalidTransferUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Move failed: operation was cancelled. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoveCancelled {
            get {
                return ResourceManager.GetString("ExceptionMoveCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Move failed: destination unknown. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoveFailedDestinationUnknown {
            get {
                return ResourceManager.GetString("ExceptionMoveFailedDestinationUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Move failed: Identifier does not match SOP Class. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoveFailedIdentifierDoesNotMatchSOPClass {
            get {
                return ResourceManager.GetString("ExceptionMoveFailedIdentifierDoesNotMatchSOPClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Move failed: out of resources (number of matches). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoveFailedOutOfResourcesNumberOfMatches {
            get {
                return ResourceManager.GetString("ExceptionMoveFailedOutOfResourcesNumberOfMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Move failed: out of resources (sub-operations). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoveFailedOutOfResourcesSubOperations {
            get {
                return ResourceManager.GetString("ExceptionMoveFailedOutOfResourcesSubOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Move failed: SOP Class not supported. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoveFailedSopClassNotSupported {
            get {
                return ResourceManager.GetString("ExceptionMoveFailedSopClassNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Move failed: unable to process. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoveFailedUnableToProcess {
            get {
                return ResourceManager.GetString("ExceptionMoveFailedUnableToProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   C-Move warning: sub-operations completed; one or more failures. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionMoveWarningSuboperationsCompleteOneOrMoreFailures {
            get {
                return ResourceManager.GetString("ExceptionMoveWarningSuboperationsCompleteOneOrMoreFailures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image display format {0} is not supported. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionNotSupportedImageDisplayFormat {
            get {
                return ResourceManager.GetString("ExceptionNotSupportedImageDisplayFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is null benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionNullReference {
            get {
                return ResourceManager.GetString("ExceptionNullReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Poorly formatted DICOM date range {0}. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionPoorlyFormattedDateRange {
            get {
                return ResourceManager.GetString("ExceptionPoorlyFormattedDateRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sequence queries are not supported at this time (tag path = {0}). benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExceptionSequenceQueriesNotSupported {
            get {
                return ResourceManager.GetString("ExceptionSequenceQueriesNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} ({1}) benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatCodeSequenceValue {
            get {
                return ResourceManager.GetString("FormatCodeSequenceValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} {2} x {1} {2} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatFilmSize {
            get {
                return ResourceManager.GetString("FormatFilmSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Column {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatImageDisplayFormatColumn {
            get {
                return ResourceManager.GetString("FormatImageDisplayFormatColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Row {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatImageDisplayFormatRow {
            get {
                return ResourceManager.GetString("FormatImageDisplayFormatRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard {0}x{1} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string FormatImageDisplayFormatStandard {
            get {
                return ResourceManager.GetString("FormatImageDisplayFormatStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The type being set is not compatible with the value representation of the tag. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string InvalidType {
            get {
                return ResourceManager.GetString("InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The Value Representatoin (VR)  selected was invalid for the tag. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string InvalidVR {
            get {
                return ResourceManager.GetString("InvalidVR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelDefault {
            get {
                return ResourceManager.GetString("LabelDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Black benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmDensityBlack {
            get {
                return ResourceManager.GetString("LabelFilmDensityBlack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   White benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmDensityWhite {
            get {
                return ResourceManager.GetString("LabelFilmDensityWhite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bin {0} benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmDestinationBinN {
            get {
                return ResourceManager.GetString("LabelFilmDestinationBinN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Magazine benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmDestinationMagazine {
            get {
                return ResourceManager.GetString("LabelFilmDestinationMagazine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Processor benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmDestinationProcessor {
            get {
                return ResourceManager.GetString("LabelFilmDestinationProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bilinear benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmMagnificationTypeBilinear {
            get {
                return ResourceManager.GetString("LabelFilmMagnificationTypeBilinear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cubic benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmMagnificationTypeCubic {
            get {
                return ResourceManager.GetString("LabelFilmMagnificationTypeCubic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Replicate benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmMagnificationTypeReplicate {
            get {
                return ResourceManager.GetString("LabelFilmMagnificationTypeReplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blue Film benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmMediumTypeBlueFilm {
            get {
                return ResourceManager.GetString("LabelFilmMediumTypeBlueFilm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Clear Film benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmMediumTypeClearFilm {
            get {
                return ResourceManager.GetString("LabelFilmMediumTypeClearFilm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mammo Blue Film benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmMediumTypeMammoBlueFilm {
            get {
                return ResourceManager.GetString("LabelFilmMediumTypeMammoBlueFilm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mammo Clear Film benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmMediumTypeMammoClearFilm {
            get {
                return ResourceManager.GetString("LabelFilmMediumTypeMammoClearFilm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Paper benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmMediumTypePaper {
            get {
                return ResourceManager.GetString("LabelFilmMediumTypePaper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Landscape benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmOrientationLandscape {
            get {
                return ResourceManager.GetString("LabelFilmOrientationLandscape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Portrait benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmOrientationPortrait {
            get {
                return ResourceManager.GetString("LabelFilmOrientationPortrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   High benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmRequestedResolutionHigh {
            get {
                return ResourceManager.GetString("LabelFilmRequestedResolutionHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmRequestedResolutionStandard {
            get {
                return ResourceManager.GetString("LabelFilmRequestedResolutionStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   cm benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmSizeUnitCentimeter {
            get {
                return ResourceManager.GetString("LabelFilmSizeUnitCentimeter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   in benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmSizeUnitInch {
            get {
                return ResourceManager.GetString("LabelFilmSizeUnitInch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cubic benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelFilmSmoothingTypeCubic {
            get {
                return ResourceManager.GetString("LabelFilmSmoothingTypeCubic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Anterior benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionAnterior {
            get {
                return ResourceManager.GetString("LabelPatientDirectionAnterior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Caudal benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionCaudal {
            get {
                return ResourceManager.GetString("LabelPatientDirectionCaudal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cranial benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionCranial {
            get {
                return ResourceManager.GetString("LabelPatientDirectionCranial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Distal benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionDistal {
            get {
                return ResourceManager.GetString("LabelPatientDirectionDistal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dorsal benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionDorsal {
            get {
                return ResourceManager.GetString("LabelPatientDirectionDorsal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Foot benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionFoot {
            get {
                return ResourceManager.GetString("LabelPatientDirectionFoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Head benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionHead {
            get {
                return ResourceManager.GetString("LabelPatientDirectionHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Lateral benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionLateral {
            get {
                return ResourceManager.GetString("LabelPatientDirectionLateral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionLeft {
            get {
                return ResourceManager.GetString("LabelPatientDirectionLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Medial benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionMedial {
            get {
                return ResourceManager.GetString("LabelPatientDirectionMedial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Palmar benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionPalmar {
            get {
                return ResourceManager.GetString("LabelPatientDirectionPalmar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Plantar benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionPlantar {
            get {
                return ResourceManager.GetString("LabelPatientDirectionPlantar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Posterior benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionPosterior {
            get {
                return ResourceManager.GetString("LabelPatientDirectionPosterior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Proximal benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionProximal {
            get {
                return ResourceManager.GetString("LabelPatientDirectionProximal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionRight {
            get {
                return ResourceManager.GetString("LabelPatientDirectionRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rostral benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionRostral {
            get {
                return ResourceManager.GetString("LabelPatientDirectionRostral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   - benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionSeparator {
            get {
                return ResourceManager.GetString("LabelPatientDirectionSeparator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unspecified benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionUnspecified {
            get {
                return ResourceManager.GetString("LabelPatientDirectionUnspecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ventral benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPatientDirectionVentral {
            get {
                return ResourceManager.GetString("LabelPatientDirectionVentral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   High benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPrintPriorityHigh {
            get {
                return ResourceManager.GetString("LabelPrintPriorityHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Low benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPrintPriorityLow {
            get {
                return ResourceManager.GetString("LabelPrintPriorityLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Medium benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LabelPrintPriorityMedium {
            get {
                return ResourceManager.GetString("LabelPrintPriorityMedium", resourceCulture);
            }
        }
    }
}
